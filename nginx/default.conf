# Define an upstream group named "client" for the client application
upstream client {
    server client:3000;  # Points to the client service running on port 3000
}

# Define an upstream group named "api" for the API service
upstream api {
    server api:5000;  # Points to the API service running on port 5000
}

# Define a server block to handle HTTP requests on port 80
server {
    listen 80;  # Listen on the default HTTP port (80)

    # Set maximum allowed size of the client request body
    client_max_body_size 125m;  # Allow requests up to 125 MB to support large payloads (e.g., file uploads)

    # Route for the client application at the root path "/"
    location / {
        proxy_pass http://client;  # Forward requests to the "client" upstream
    }

    # Special route for WebSocket connections to "/sockjs-node"
    location /sockjs-node {
        proxy_pass http://client;  # Forward WebSocket requests to the "client" upstream

        # Enable support for WebSocket protocol
        proxy_http_version 1.1;  # Use HTTP/1.1, which supports WebSocket connections
        proxy_set_header Upgrade $http_upgrade;  # Set "Upgrade" header to support WebSocket upgrade
        proxy_set_header Connection "Upgrade";  # Set "Connection" header to indicate upgrade for WebSocket
    }

    # Route for API requests that start with "/api"
    location /api {
        # Rewrite URI to remove the "/api" prefix before forwarding
        rewrite /api/(.*) /$1 break;

        # Forward the rewritten request to the "api" upstream
        proxy_pass http://api;
    }
}
